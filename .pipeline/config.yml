---
general:
  buildTool: "npm"
service:
  buildToolVersion: "N18"
stages:
  Build:
    mavenExecuteStaticCodeChecks: false
    npmExecuteLint: false
  Container Build:
    # that has no effect:
    stashContent: [ "buildResult" ]
    verbose: true
  Additional Unit Tests:
    npmExecuteScripts: false
  Acceptance:
    cloudFoundryDeploy: false
    npmExecuteEndToEndTests: false
  Compliance:
    sonarExecuteScan: false
  Release:
    cloudFoundryDeploy: false
    tmsUpload: false
    kubernetesDeploy: true
steps:
  artifactPrepareVersion:
    versioningType: "cloud_noTag"
  cloudFoundryDeploy:
    mtaDeployParameters: "-f --version-rule ALL"

  # custom additions to make nom build work 
  buildExecute:
    npmRunScripts: [ 'cds-build' ]
    npmInstall: false
    cnbBuild: true
    kubernetesDeploy: true

  pipelineStashFilesAfterBuild:
    stashIncludes:
      buildResult: '**/*'

  # cnbBuild config
  cnbBuild:
    dockerConfigJsonCredentialsId: docker-config
    containerRegistryUrl: concise.common.repositories.cloud.sap
    containerImageTag: latest
    multipleImages:
      - path: gen/srv
        containerImageName: susaas-images/susaas-srv
      - path: gen/api
        containerImageName: susaas-image/usaas-api
      - path: broker
        containerImageName: susaas-image/broker
      - path: gen/db-com
        containerImageName: susaas-image/db-com
      - path: gen/router
        containerImageName: susaas-image/router

  # kubernetesDeploy config
  kubernetesDeploy:
    additionalParameters:
      - --debug
    deployTool: helm3
    deploymentName: mh-deployment-01
    chartPath:  charts/sustainable-saas/
    containerRegistryUrl: https://concise.common.repositories.cloud.sap
    kubeConfigFileCredentialsId: kube-config
    containerRegistrySecret: concise
    stashContent:
      - source
    verbose: true
    namespace: mh-01
    helmDeployWaitSeconds: 600
    xvaluesMapping:
      api.image.repository:    image.susaas_image/usaas_api.repository
      api.image.tag:           image.susaas_image/usaas_api.tag
      srv.image.repository:    image.susaas_images/susaas_srv.repository
      srv.image.tag:           image.susaas_images/susaas_srv.tag
      broker.image.repository: image.susaas_image/broker.repository
      broker.image.tag:        image.susaas_image/broker.tag
      global.imagePullSecret.name: imagePullSecrets[0].name
    
  dockerExecuteOnKubernetes:
    verbose: true
